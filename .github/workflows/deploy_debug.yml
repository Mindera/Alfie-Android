name: PR Validation and Firebase Deployment

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  setup:
    name: Setup Environment
    runs-on: ubuntu-latest
    outputs:
      firebase_credentials: ${{ steps.set_firebase.outputs.firebase_credentials }}
      google_services_json: ${{ steps.set_firebase.outputs.google_services_json }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.1
          bundler-cache: true

      - name: Install Dependencies
        run: |
          gem install bundler
          bundle install
          
  deploy:
    needs: setup  # This ensures setup runs first
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.1
          bundler-cache: true

      - name: Install Dependencies
        run: |
          gem install bundler
          bundle install

      - name: Set Firebase Credentials
        env:
          FIREBASE_CREDENTIALS: ${{ secrets.FIREBASE_DISTRIBUTOR_KEY }}
          GOOGLE_SERVICES_JSON: ${{ secrets.GOOGLE_SERVICES_JSON }}
        run: |
          echo "${FIREBASE_CREDENTIALS}" > fastlane/firebase_login_credentials.json
          echo "${GOOGLE_SERVICES_JSON}" > app/src/google-services.json

      - name: Determine Build Type
        id: set_build
        run: |
          if [ "${{ github.event_name }}" == "pull_request" ]; then
            echo "BUILD_TYPE=debug" >> $GITHUB_ENV
            echo "FIREBASE_APP_ID=${{ secrets.FIREBASE_APP_ID_DEBUG }}" >> $GITHUB_ENV
          else
            echo "BUILD_TYPE=beta" >> $GITHUB_ENV
            echo "FIREBASE_APP_ID=${{ secrets.FIREBASE_APP_ID_BETA }}" >> $GITHUB_ENV
          fi

      - name: Run Fastlane
        run: bundle exec fastlane deploy_${{ env.BUILD_TYPE }}

      - name: Upload Fastlane Logs
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: fastlane-logs
          path: fastlane/logs